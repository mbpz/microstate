!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).MicroState={})}(this,(function(t){"use strict";t.MicroState=class{constructor(t){this.listeners=new Set,this.middlewares=[],this.reducers=[],this.state=t}getState(){return this.state}dispatch(t){let e=this.state;for(const s of this.reducers)e=s(e,t);for(const s of this.middlewares)e=s(e,t);e!==this.state&&(this.state=e,this.notify())}subscribe(t){return this.listeners.add(t),()=>{this.listeners.delete(t)}}use(t){this.middlewares.push(t)}addReducer(t){this.reducers.push(t)}notify(){this.listeners.forEach((t=>t(this.state)))}}}));
//# sourceMappingURL=microstate.umd.js.map
